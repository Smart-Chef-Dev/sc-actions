name: Docker

on:
  push:
    branches:
      - main
      - develop
    tags:
      - v*

env:
  # TODO: Change variable to your image's name.
  IMAGE_NAME: sc-actions

jobs:
  lint:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [ 14.x ]

    steps:
      - uses: actions/checkout@v2

      - name: Install modules
        run: npm i

      - name: Run ESLint
        run: npm run lint

  test:
    needs: lint
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [ 14.x ]

    steps:
      - uses: actions/checkout@v2

      - name: Install modules
        run: npm i

      - name: Run ESLint
        run: npm run test

  build:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Run tests
        run: |
          if [ -f docker-compose.test.yml ]; then
            docker-compose --file docker-compose.test.yml build
            docker-compose --file docker-compose.test.yml run sut
          else
            docker build . --file Dockerfile
          fi

  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    needs: build

    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME

      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Set the value
        run: |
          echo IMAGE_REPOSITORY=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]') >> $GITHUB_ENV

      - name: Push image
        run: |
          IMAGE_ID=docker.pkg.github.com/${{ env.IMAGE_REPOSITORY }}/$IMAGE_NAME

          # Change all uppercase to lowercase
          MAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "main" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

  push-dev:
    needs: build

    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/develop'

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME

      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Set the value
        run: |
          echo IMAGE_REPOSITORY=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]') >> $GITHUB_ENV

      - name: Push image
        run: |
          IMAGE_ID=docker.pkg.github.com/${{ env.IMAGE_REPOSITORY }}/$IMAGE_NAME

          # Change all uppercase to lowercase
          MAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "main" ] && VERSION=dev

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

  deploy-to-do:
    needs: push
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Deploy to Digital Ocean droplet via SSH
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: |
            cd ./sc-actions/
            docker-compose stop
            docker pull docker.pkg.github.com/smart-chef-dev/sc-actions/sc-actions:latest
            docker-compose up -d

  deploy-to-do-dev:
    needs: push
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Deploy to Digital Ocean droplet via SSH
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.HOST_DEV }}
          username: ${{ secrets.USERNAME_DEV }}
          password: ${{ secrets.PASSWORD_DEV }}
          port: ${{ secrets.PORT_DEV }}
          script: |
            cd ./sc-actions/
            docker-compose stop
            docker pull docker.pkg.github.com/smart-chef-dev/sc-actions/sc-actions:dev
            docker-compose up -d